UIApplication.sharedApplication.delegate
App.delegate
play.subviews.count
App.delegate
App.delegate.controllers
App.delegate.controller
App.delegate
self
self.frame
self.text
self.title
sessions
quit
self
self.inspect
UIView
@recording_url
TimerController
quit
window
@window
App
App.delegate
App.delegate.window
repl(App.delegate)
@window
@window.root_view_controller
@window.rootViewController
repl(@window.rootViewController)
@play
@play.frame
@play.frame = [[margin, 260], [view.frame.size.width - margin * 2, 180]]
@play.frame = [[20, 260], [view.frame.size.width - 40, 40]]
@play.frame = [[60, 260], [view.frame.size.width - 40, 40]]
@play.frame = [[80, 260], [view.frame.size.width - 40, 40]]
@play.frame = [[20, 260], [view.frame.size.width - 40, 40]]
@play.frame = [[20, 300], [view.frame.size.width - 40, 40]]
@recording_url
playSound
repl(App.delegate)
repl(@window.rootViewController)
@player
@recording_url
@recording_url.to_s
@recording_url.methods.sort - Object.methods
playSound
player = AVAudioPlayer.alloc.initWithContentsOfURL @recording_url, error: playback_error
player = AVAudioPlayer.alloc.initWithContentsOfURL @recording_url, error: nil
play
player
player.play
player.play
repl(App.delegate)
repl(@window.rootViewController)
playSound
getRecordingUrl
getRecordingUrl.class
getRecordingUrl
err = Pointer.new(:object)
player = AVAudioPlayer.alloc.initWithContentsOfURL getRecordingUrl, error: err
player
err
NSLog(err)
err.value
puts err.value
NSLog(err)
player.play
repl(App.delegate)
repl(@window.rootViewController)
err = Pointer.new(:object)
player = AVAudioPlayer.alloc.initWithContentsOfURL getRecordingUrl, error: err
play.play
player.play
player = AVPlayer.alloc.initWithContentsOfURL getRecordingUrl, error: err
getRecordingUrl
data = NSData.new(dataWithContentsOfURL: getRecordingUrl)
data = NSData.new; data.dataWithContentsOfURL = getRecordingUrl
repl(App.delegate)
repl(@window.rootViewController)
self.instance_variable_get('@recorder')
r = _
r.methods.sort - Object.methods
player = AVPlayer.alloc.initWithContentsOfURL getRecordingUrl, error: nil
player = AVAudioPlayer.alloc.initWithContentsOfURL getRecordingUrl, error: nil
player.play
DBAccountManager
DBRootDropbox
KDBRootDropbox
require 'dropbox-ios-sdk'